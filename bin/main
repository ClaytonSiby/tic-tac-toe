#!/usr/bin/env ruby
require_relative '../lib/board'
require_relative '../lib/player'


posible_wins = [[1, 2, 3], [4, 5, 6], [7, 8, 9], [7, 4, 1], [8, 5, 2], [9, 6, 3], [3, 2, 1], [6, 5, 4], [9, 8, 7], [1, 4, 7], [2, 5, 8], [3, 6, 9], [7, 5, 3], [3, 5, 7], [9, 5, 1], [1, 5, 9]]

player_one_choices = []
player_two_choices = []
game_on = true

puts 'Player 1 name: '
player_one = gets.chomp

puts 'Player 2 name: '
player_two = gets.chomp

first_player = Player.new(player_one, "X")
second_player = Player.new(player_two, "O")
board = Board.new(first_player, second_player)


puts "#{player_one} pick a number from 1 to 9: "
player_one_choice = gets.chomp.to_i

player_one_choices << board.asign_mark(player_one_choice, first_player.mark)
puts board.draw_board

while game_on
  board.draw_message if board.board_full?
  if posible_wins.any?(player_one_choices)
    board.player_wins(player_one)
    game_on = false
  else
    board.switch_player
  end
end

puts "#{player_two} pick a number from 1 to 9: "
player_two_choice = gets.chomp.to_i

player_two_choices << board.asign_mark(player_two_choice, second_player.mark)
puts board.draw_board

while game_on
  board.draw_message if board.board_full?
  if posible_wins.any?(player_two_choices)
    board.player_wins(player_two)
    game_on = false
  else
    board.switch_player
  end
end




# game_on = true

# puts 'Player 1 name: '
# player_one = gets.chomp

# puts 'Player 2 name: '
# player_two = gets.chomp

# puts "#{player_one} pick a number from 1 to 9: "
# player_one_choice = gets.chomp.to_i

# if move_is_valid?(player_one_choice)
#   player_one_choices << player_one_choice
#   puts board
# else
#   error_message
# end


# puts "#{player_two} pick a number from 1 to 9: "
# player_two_choice = gets.chomp.to_i

# if move_is_valid?(player_two_choice)
#   player_two_choices << player_two_choice
#   puts board
# else
#   error_message
# end

# while game_on
#   draw_message if board_is_full?
#   if posible_wins.any?(player_two_choices)
#     player_wins(player_two)
#     game_on = false
#   else
#     swich_player
#   end
# end
